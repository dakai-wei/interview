name: REGRESSION testsuits
on:
  schedule:
    - cron: '0 8 * * 0-6'  # Run daily at midnight

jobs:
  test:
    runs-on: windows-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4  # Fixed action name

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'  # Ensure Python version is specified

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          playwright install
          pip install allure-pytest

      - name: Install Java & Allure CLI
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '23'

      - name: Install Allure CLI
        run: |
          npm install -g allure-commandline
          echo "ALLURE_PATH=$(npm root -g)/allure-commandline/bin" | Out-File -FilePath $env:GITHUB_ENV -Append
          echo "PATH=$env:PATH;$(npm root -g)/allure-commandline/bin" | Out-File -FilePath $env:GITHUB_ENV -Append

      - name: Run Smoke Test Suits
        run: pytest -m smoke --alluredir=allure-results
        
      - name: Generate Allure Report
        run: |
          mkdir allure-report
          npx allure-commandline generate allure-results -o allure-report --clean
        continue-on-error: true


      - name: Upload Allure Report as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: allure-report

      - name: Extract Allure Report Summary
        run: |
          python - <<EOF
          import json
          import os

          summary_file = "allure-results/summary.json"
          summary_text = "Allure Report Summary:\n full report is here: https://dakai-wei.github.io/interview/index.html\n"

          if os.path.exists(summary_file):
              with open(summary_file, "r") as file:
                  summary = json.load(file)
                  summary_text += f"✔️ Passed: {summary['statistic']['passed']}\n"
                  summary_text += f❌ "Failed: {summary['statistic']['failed']}\n"
                  summary_text += f"⚠️ Skipped: {summary['statistic']['skipped']}\n"
                  summary_text += f"⏱️ Execution Time: {summary['time']['duration']/1000:.2f} seconds\n"
          else:
              summary_text += "⚠️ Summary file not found!"

          # Save summary to a file
          with open("allure_summary.txt", "w") as file:
              file.write(summary_text)
          EOF

      - name: Send Email Notification
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.EMAIL_USER }}
          password: ${{ secrets.EMAIL_PASS }}
          subject: "Smoke Tests Report"
          body_file: allure_summary.txt  # Uses the generated summary as email body
          to: "wei.dakai@hotmail.com"
          from: "GitHub Actions"
          attachments: allure-report/index.html

          
      - name: Deploy Allure Report to GitHub Pages
        if: success()
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: ./allure-report
